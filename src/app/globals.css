@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
}

@layer base {
  :root {
    --background: 210 17% 97%; /* #f8f9fa - light gray from Aroma design */
    --foreground: 248 16% 33%; /* aroma-text #4B4763 */

    --card: 0 0% 100%; /* white */
    --card-foreground: 248 16% 33%; /* aroma-text */

    --popover: 0 0% 100%; /* white */
    --popover-foreground: 248 16% 33%; /* aroma-text */

    --primary: 253 100% 68%; /* aroma-primary #7a5cff */
    --primary-foreground: 0 0% 100%; /* white */

    --secondary: 12 100% 68%; /* aroma-secondary #FF7A5C */
    --secondary-foreground: 0 0% 100%; /* white (for contrast with orange) */

    --muted: 253 100% 96%; /* very light aroma-primary */
    --muted-foreground: 247 13% 48%; /* aroma-text-muted #6f6b89 */

    --accent: 133 100% 68%; /* aroma-accent #5CFF7A */
    --accent-foreground: 248 16% 33%; /* aroma-text (for contrast with green) */

    --destructive: 0 70% 55%; /* standard destructive red */
    --destructive-foreground: 0 0% 100%; /* white */

    --border: 210 14% 90%; /* gray-200 #e5e7eb from Aroma card borders */
    --input: 210 14% 90%; /* same as border */
    --ring: 253 100% 68%; /* aroma-primary for focus rings */

    --radius: 0.75rem; /* from Aroma design system for lg, default for ShadCN */

    /* Chart colors (can be kept or updated if Aroma spec has them) */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    /* AromaChat Design System HSL Variables */
    --aroma-primary-hsl: 253 100% 68%;
    --aroma-secondary-hsl: 12 100% 68%;
    --aroma-accent-hsl: 133 100% 68%;
    --aroma-text-hsl: 248 16% 33%;
    --aroma-text-muted-hsl: 247 13% 48%;
    --aroma-grad-start-hsl: 252 100% 69%;
    --aroma-grad-end-hsl: 330 100% 69%;
    --alert-bg-hsl: 39 100% 95%; /* approx rgba(255, 244, 229) */
    --alert-text-hsl: 30 95% 44%; /* #d97706 */
    --alert-border-hsl: 39 92% 50%; /* approx rgba(245, 158, 11) */
    --alert-icon-hsl: 30 95% 44%; /* #d97706 */
    /* Note: For --alert-bg and --alert-border, opacity is handled by Tailwind class like bg-alert-bg/80 */

    /* Custom Sidebar Vars - Aligned with new Aroma theme */
    --app-sidebar-background: 0 0% 100%; /* Card white */
    --app-sidebar-foreground: 248 16% 33%; /* aroma-text */
    --app-sidebar-border: 210 14% 90%; /* border */
    --app-sidebar-hover-background: 210 17% 95%; /* Slightly darker than main background */
    --app-sidebar-active-background: 253 100% 68%; /* aroma-primary */
    --app-sidebar-active-foreground: 0 0% 100%; /* white */

    /* Footer Navigation Height */
    --footer-nav-height: 60px; /* Default footer height */
  }

  .dark {
    --background: 240 10% 10%;
    --foreground: 210 17% 85%;

    --card: 240 10% 12%;
    --card-foreground: 210 17% 85%;

    --popover: 240 10% 12%;
    --popover-foreground: 210 17% 85%;

    --primary: 253 100% 75%; /* Lighter aroma-primary */
    --primary-foreground: 248 16% 10%; /* Dark text for lighter primary */

    --secondary: 12 100% 75%; /* Lighter aroma-secondary */
    --secondary-foreground: 0 0% 10%; /* Dark text for lighter secondary */

    --muted: 253 30% 20%; /* Darker version of light aroma-primary */
    --muted-foreground: 247 10% 70%; /* Lighter aroma-text-muted */

    --accent: 133 100% 75%; /* Lighter aroma-accent */
    --accent-foreground: 248 16% 10%; /* Dark text for lighter accent */

    --destructive: 0 70% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 240 5% 25%;
    --input: 240 5% 25%;
    --ring: 253 100% 75%; /* Lighter aroma-primary */

    /* AromaChat Design System HSL Variables - Dark Mode */
    --aroma-primary-hsl: 253 100% 75%;
    --aroma-secondary-hsl: 12 100% 75%;
    --aroma-accent-hsl: 133 100% 75%;
    --aroma-text-hsl: 210 17% 85%; /* Lighter text for dark mode */
    --aroma-text-muted-hsl: 247 10% 70%; /* Lighter muted text for dark mode */
    --aroma-grad-start-hsl: 252 100% 76%;
    --aroma-grad-end-hsl: 330 100% 76%;
    /* Alert colors for dark mode would need specific design or derivation */
    --alert-bg-hsl: 39 30% 20%;
    --alert-text-hsl: 30 95% 70%;
    --alert-border-hsl: 39 50% 30%;
    --alert-icon-hsl: 30 95% 70%;

    /* Custom Sidebar Vars - Dark Mode */
    --app-sidebar-background: 240 10% 12%;
    --app-sidebar-foreground: 210 17% 85%;
    --app-sidebar-border: 240 5% 25%;
    --app-sidebar-hover-background: 240 10% 18%;
    --app-sidebar-active-background: 253 100% 75%;
    --app-sidebar-active-foreground: 248 16% 10%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Generated by https://unpkg.com/tailwindcss-safe-area@0.5.0/generator/index.html */
/* postcss-safe-area: on */
:root {
  --sat: env(safe-area-inset-top);
  --sar: env(safe-area-inset-right);
  --sab: env(safe-area-inset-bottom);
  --sal: env(safe-area-inset-left);
}

/* For browsers that don't support :where() or :has() selectors. */
@supports (width: env(safe-area-inset-top)) {
  /* Position */
  .fixed-t {
    top: var(--sat);
  }
  .fixed-r {
    right: var(--sar);
  }
  .fixed-b {
    bottom: var(--sab);
  }
  .fixed-l {
    left: var(--sal);
  }
  .fixed-x {
    right: var(--sar);
    left: var(--sal);
  }
  .fixed-y {
    top: var(--sat);
    bottom: var(--sab);
  }
  .fixed-i {
    top: var(--sat);
    right: var(--sar);
    bottom: var(--sab);
    left: var(--sal);
  }
  /* Margin */
  .mt-safe {
    margin-top: var(--sat);
  }
  .mr-safe {
    margin-right: var(--sar);
  }
  .mb-safe {
    margin-bottom: var(--sab);
  }
  .ml-safe {
    margin-left: var(--sal);
  }
  .mx-safe {
    margin-right: var(--sar);
    margin-left: var(--sal);
  }
  .my-safe {
    margin-top: var(--sat);
    margin-bottom: var(--sab);
  }
  .m-safe {
    margin-top: var(--sat);
    margin-right: var(--sar);
    margin-bottom: var(--sab);
    margin-left: var(--sal);
  }
  /* Padding */
  .pt-safe {
    padding-top: var(--sat);
  }
  .pr-safe {
    padding-right: var(--sar);
  }
  .pb-safe {
    padding-bottom: var(--sab);
  }
  .pl-safe {
    padding-left: var(--sal);
  }
  .px-safe {
    padding-right: var(--sar);
    padding-left: var(--sal);
  }
  .py-safe {
    padding-top: var(--sat);
    padding-bottom: var(--sab);
  }
  .p-safe {
    padding-top: var(--sat);
    padding-right: var(--sar);
    padding-bottom: var(--sab);
    padding-left: var(--sal);
  }
  /* Space between */
  .space-x-safe > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(var(--sal) * var(--tw-space-x-reverse));
    margin-left: calc(var(--sal) * calc(1 - var(--tw-space-x-reverse)));
  }
  .space-y-safe > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(var(--sat) * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(var(--sat) * var(--tw-space-y-reverse));
  }
  /* Scroll margin */
  .scroll-mt-safe {
    scroll-margin-top: var(--sat);
  }
  .scroll-mr-safe {
    scroll-margin-right: var(--sar);
  }
  .scroll-mb-safe {
    scroll-margin-bottom: var(--sab);
  }
  .scroll-ml-safe {
    scroll-margin-left: var(--sal);
  }
  .scroll-mx-safe {
    scroll-margin-right: var(--sar);
    scroll-margin-left: var(--sal);
  }
  .scroll-my-safe {
    scroll-margin-top: var(--sat);
    scroll-margin-bottom: var(--sab);
  }
  .scroll-m-safe {
    scroll-margin-top: var(--sat);
    scroll-margin-right: var(--sar);
    scroll-margin-bottom: var(--sab);
    scroll-margin-left: var(--sal);
  }
  /* Scroll padding */
  .scroll-pt-safe {
    scroll-padding-top: var(--sat);
  }
  .scroll-pr-safe {
    scroll-padding-right: var(--sar);
  }
  .scroll-pb-safe {
    scroll-padding-bottom: var(--sab);
  }
  .scroll-pl-safe {
    scroll-padding-left: var(--sal);
  }
  .scroll-px-safe {
    scroll-padding-right: var(--sar);
    scroll-padding-left: var(--sal);
  }
  .scroll-py-safe {
    scroll-padding-top: var(--sat);
    scroll-padding-bottom: var(--sab);
  }
  .scroll-p-safe {
    scroll-padding-top: var(--sat);
    scroll-padding-right: var(--sar);
    scroll-padding-bottom: var(--sab);
    scroll-padding-left: var(--sal);
  }
  /* inset */
  .inset-t-safe {
    top: var(--sat);
  }
  .inset-r-safe {
    right: var(--sar);
  }
  .inset-b-safe {
    bottom: var(--sab);
  }
  .inset-l-safe {
    left: var(--sal);
  }
  .inset-x-safe {
    right: var(--sar);
    left: var(--sal);
  }
  .inset-y-safe {
    top: var(--sat);
    bottom: var(--sab);
  }
  .inset-i-safe {
    top: var(--sat);
    right: var(--sar);
    bottom: var(--sab);
    left: var(--sal);
  }
  /* Min height */
  .min-h-screen-safe {
    min-height: 100vh;
    /* The following rules are deprecated. Use `min-h-screen-safe-top`, `min-h-screen-safe-bottom`, or `min-h-screen-safe-vertical` instead. */
    /* stylelint-disable-next-line declaration-block-no-duplicate-properties */
    min-height: calc(100vh - (var(--sat) + var(--sab)));
  }
  .min-h-screen-safe-top {
    min-height: calc(100vh - var(--sat));
  }
  .min-h-screen-safe-right {
    min-height: calc(100vh - var(--sar));
  }
  .min-h-screen-safe-bottom {
    min-height: calc(100vh - var(--sab));
  }
  .min-h-screen-safe-left {
    min-height: calc(100vh - var(--sal));
  }
  .min-h-screen-safe-horizontal {
    min-height: calc(100vh - (var(--sal) + var(--sar)));
  }
  .min-h-screen-safe-vertical {
    min-height: calc(100vh - (var(--sat) + var(--sab)));
  }
  /* Max height */
  .max-h-screen-safe {
    max-height: 100vh;
    /* The following rules are deprecated. Use `max-h-screen-safe-top`, `max-h-screen-safe-bottom`, or `max-h-screen-safe-vertical` instead. */
    /* stylelint-disable-next-line declaration-block-no-duplicate-properties */
    max-height: calc(100vh - (var(--sat) + var(--sab)));
  }
  .max-h-screen-safe-top {
    max-height: calc(100vh - var(--sat));
  }
  .max-h-screen-safe-right {
    max-height: calc(100vh - var(--sar));
  }
  .max-h-screen-safe-bottom {
    max-height: calc(100vh - var(--sab));
  }
  .max-h-screen-safe-left {
    max-height: calc(100vh - var(--sal));
  }
  .max-h-screen-safe-horizontal {
    max-height: calc(100vh - (var(--sal) + var(--sar)));
  }
  .max-h-screen-safe-vertical {
    max-height: calc(100vh - (var(--sat) + var(--sab)));
  }
  /* Height */
  .h-screen-safe {
    height: 100vh;
    /* The following rules are deprecated. Use `h-screen-safe-top`, `h-screen-safe-bottom`, or `h-screen-safe-vertical` instead. */
    /* stylelint-disable-next-line declaration-block-no-duplicate-properties */
    height: calc(100vh - (var(--sat) + var(--sab)));
  }
  .h-screen-safe-top {
    height: calc(100vh - var(--sat));
  }
  .h-screen-safe-right {
    height: calc(100vh - var(--sar));
  }
  .h-screen-safe-bottom {
    height: calc(100vh - var(--sab));
  }
  .h-screen-safe-left {
    height: calc(100vh - var(--sal));
  }
  .h-screen-safe-horizontal {
    height: calc(100vh - (var(--sal) + var(--sar)));
  }
  .h-screen-safe-vertical {
    height: calc(100vh - (var(--sat) + var(--sab)));
  }
}
/* Position */
:where(.fixed-t) {
  top: var(--sat);
}
:where(.fixed-r) {
  right: var(--sar);
}
:where(.fixed-b) {
  bottom: var(--sab);
}
:where(.fixed-l) {
  left: var(--sal);
}
:where(.fixed-x) {
  right: var(--sar);
  left: var(--sal);
}
:where(.fixed-y) {
  top: var(--sat);
  bottom: var(--sab);
}
:where(.fixed-i) {
  top: var(--sat);
  right: var(--sar);
  bottom: var(--sab);
  left: var(--sal);
}
/* Margin */
:where(.mt-safe) {
  margin-top: var(--sat);
}
:where(.mr-safe) {
  margin-right: var(--sar);
}
:where(.mb-safe) {
  margin-bottom: var(--sab);
}
:where(.ml-safe) {
  margin-left: var(--sal);
}
:where(.mx-safe) {
  margin-right: var(--sar);
  margin-left: var(--sal);
}
:where(.my-safe) {
  margin-top: var(--sat);
  margin-bottom: var(--sab);
}
:where(.m-safe) {
  margin-top: var(--sat);
  margin-right: var(--sar);
  margin-bottom: var(--sab);
  margin-left: var(--sal);
}
/* Padding */
:where(.pt-safe) {
  padding-top: var(--sat);
}
:where(.pr-safe) {
  padding-right: var(--sar);
}
:where(.pb-safe) {
  padding-bottom: var(--sab);
}
:where(.pl-safe) {
  padding-left: var(--sal);
}
:where(.px-safe) {
  padding-right: var(--sar);
  padding-left: var(--sal);
}
:where(.py-safe) {
  padding-top: var(--sat);
  padding-bottom: var(--sab);
}
:where(.p-safe) {
  padding-top: var(--sat);
  padding-right: var(--sar);
  padding-bottom: var(--sab);
  padding-left: var(--sal);
}
/* Space between */
:where(.space-x-safe > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(var(--sal) * var(--tw-space-x-reverse));
  margin-left: calc(var(--sal) * calc(1 - var(--tw-space-x-reverse)));
}
:where(.space-y-safe > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(var(--sat) * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(var(--sat) * var(--tw-space-y-reverse));
}
/* Scroll margin */
:where(.scroll-mt-safe) {
  scroll-margin-top: var(--sat);
}
:where(.scroll-mr-safe) {
  scroll-margin-right: var(--sar);
}
:where(.scroll-mb-safe) {
  scroll-margin-bottom: var(--sab);
}
:where(.scroll-ml-safe) {
  scroll-margin-left: var(--sal);
}
:where(.scroll-mx-safe) {
  scroll-margin-right: var(--sar);
  scroll-margin-left: var(--sal);
}
:where(.scroll-my-safe) {
  scroll-margin-top: var(--sat);
  scroll-margin-bottom: var(--sab);
}
:where(.scroll-m-safe) {
  scroll-margin-top: var(--sat);
  scroll-margin-right: var(--sar);
  scroll-margin-bottom: var(--sab);
  scroll-margin-left: var(--sal);
}
/* Scroll padding */
:where(.scroll-pt-safe) {
  scroll-padding-top: var(--sat);
}
:where(.scroll-pr-safe) {
  scroll-padding-right: var(--sar);
}
:where(.scroll-pb-safe) {
  scroll-padding-bottom: var(--sab);
}
:where(.scroll-pl-safe) {
  scroll-padding-left: var(--sal);
}
:where(.scroll-px-safe) {
  scroll-padding-right: var(--sar);
  scroll-padding-left: var(--sal);
}
:where(.scroll-py-safe) {
  padding-top: var(--sat);
  padding-bottom: var(--sab);
}
:where(.scroll-p-safe) {
  padding-top: var(--sat);
  padding-right: var(--sar);
  padding-bottom: var(--sab);
  padding-left: var(--sal);
}
/* inset */
:where(.inset-t-safe) {
  top: var(--sat);
}
:where(.inset-r-safe) {
  right: var(--sar);
}
:where(.inset-b-safe) {
  bottom: var(--sab);
}
:where(.inset-l-safe) {
  left: var(--sal);
}
:where(.inset-x-safe) {
  right: var(--sar);
  left: var(--sal);
}
:where(.inset-y-safe) {
  top: var(--sat);
  bottom: var(--sab);
}
:where(.inset-i-safe) {
  top: var(--sat);
  right: var(--sar);
  bottom: var(--sab);
  left: var(--sal);
}
/* Min height */
:where(.min-h-screen-safe) {
  min-height: 100vh;
  min-height: calc(100vh - (var(--sat) + var(--sab)));
}
:where(.min-h-screen-safe-top) {
  min-height: calc(100vh - var(--sat));
}
:where(.min-h-screen-safe-right) {
  min-height: calc(100vh - var(--sar));
}
:where(.min-h-screen-safe-bottom) {
  min-height: calc(100vh - var(--sab));
}
:where(.min-h-screen-safe-left) {
  min-height: calc(100vh - var(--sal));
}
:where(.min-h-screen-safe-horizontal) {
  min-height: calc(100vh - (var(--sal) + var(--sar)));
}
:where(.min-h-screen-safe-vertical) {
  min-height: calc(100vh - (var(--sat) + var(--sab)));
}
/* Max height */
:where(.max-h-screen-safe) {
  max-height: 100vh;
  max-height: calc(100vh - (var(--sat) + var(--sab)));
}
:where(.max-h-screen-safe-top) {
  max-height: calc(100vh - var(--sat));
}
:where(.max-h-screen-safe-right) {
  max-height: calc(100vh - var(--sar));
}
:where(.max-h-screen-safe-bottom) {
  max-height: calc(100vh - var(--sab));
}
:where(.max-h-screen-safe-left) {
  max-height: calc(100vh - var(--sal));
}
:where(.max-h-screen-safe-horizontal) {
  max-height: calc(100vh - (var(--sal) + var(--sar)));
}
:where(.max-h-screen-safe-vertical) {
  max-height: calc(100vh - (var(--sat) + var(--sab)));
}
/* Height */
:where(.h-screen-safe) {
  height: 100vh;
  height: calc(100vh - (var(--sat) + var(--sab)));
}
:where(.h-screen-safe-top) {
  height: calc(100vh - var(--sat));
}
:where(.h-screen-safe-right) {
  height: calc(100vh - var(--sar));
}
:where(.h-screen-safe-bottom) {
  height: calc(100vh - var(--sab));
}
:where(.h-screen-safe-left) {
  height: calc(100vh - var(--sal));
}
:where(.h-screen-safe-horizontal) {
  height: calc(100vh - (var(--sal) + var(--sar)));
}
:where(.h-screen-safe-vertical) {
  height: calc(100vh - (var(--sat) + var(--sab)));
}
/* Support for :has() selector. */
@supports selector(:has(a)) {
  /* Scroll margin */
  .scroll-mt-safe:has(> :only-child) {
    scroll-margin-top: var(--sat);
  }
  .scroll-mr-safe:has(> :only-child) {
    scroll-margin-right: var(--sar);
  }
  .scroll-mb-safe:has(> :only-child) {
    scroll-margin-bottom: var(--sab);
  }
  .scroll-ml-safe:has(> :only-child) {
    scroll-margin-left: var(--sal);
  }
  /* Scroll padding */
  .scroll-pt-safe:has(> :only-child) {
    scroll-padding-top: var(--sat);
  }
  .scroll-pr-safe:has(> :only-child) {
    scroll-padding-right: var(--sar);
  }
  .scroll-pb-safe:has(> :only-child) {
    scroll-padding-bottom: var(--sab);
  }
  .scroll-pl-safe:has(> :only-child) {
    scroll-padding-left: var(--sal);
  }
}
/* postcss-safe-area: off */


.h-\[var\(--radix-accordion-content-height\)\] {
  height: var(--radix-accordion-content-height);
}
.h-\[var\(--radix-collapsible-content-height\)\] {
  height: var(--radix-collapsible-content-height);
}
.w-\[var\(--radix-collapsible-content-width\)\] {
  width: var(--radix-collapsible-content-width);
}
.h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}
.w-\[var\(--radix-navigation-menu-viewport-width\)\] {
  width: var(--radix-navigation-menu-viewport-width);
}
.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.w-\[var\(--radix-select-trigger-width\)\] {
  width: var(--radix-select-trigger-width);
}
.translate-x-\[var\(--radix-toast-swipe-end-x\)\] {
  transform: translateX(var(--radix-toast-swipe-end-x));
}
.translate-x-\[var\(--radix-toast-swipe-move-x\)\] {
  transform: translateX(var(--radix-toast-swipe-move-x));
}
.left-\[var\(--radix-tooltip-trigger-width\)\] {
  left: var(--radix-tooltip-trigger-width);
}
.top-\[var\(--radix-tooltip-trigger-height\)\] {
  top: var(--radix-tooltip-trigger-height);
}

/* Custom utility classes for footer height, matching Tailwind's arbitrary value syntax */
.h-\[var\(--footer-nav-height\)\] {
  height: var(--footer-nav-height);
}

.pb-\[var\(--footer-nav-height\)\] {
  padding-bottom: var(--footer-nav-height);
}
